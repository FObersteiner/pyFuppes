[project]
authors = [{ name = "Florian Obersteiner", email = "f.obersteiner@posteo.de" }]
license = { text = "LGPL3" }
name = "pyfuppes"
version = "0.6.0"
description = "A collection of tools in Python"
readme = "README.md"
requires-python = "<3.13,>=3.10"
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
]
dependencies = [
  "geopy>=2.0",
  "matplotlib>=3.0",
  "netcdf4>=1.6",
  "numba>=0.59.0",
  "numpy>=1.18",
  "pandas>=2.0",
  "polars>=1.0",
  "pysolar>=0.10",
  "scipy>=1.1",
  "scikit-learn>=1.4",
  "xarray>=2022,>=2023,>=2024",
]


[dependency-groups]
dev = [
  "pre-commit>=3.3.3",
  "pytest>=7.0",
  "black>=24.3",
  "flake8>=6.0",
  "ruff>=0.0.254",
  "jupyter-core>=4.0",
  "sphinx-autoapi>=2.0",
  "sphinx-rtd-theme>=1.0",
  "myst-nb>=0.17",
]

[project.urls]
Homepage = "https://github.com/FObersteiner/pyFuppes"
Issues = "https://github.com/FObersteiner/pyFuppes/issues"
Changelog = "https://github.com/FObersteiner/pyFuppes/blob/master/CHANGELOG.md"
Documentation = "https://pyfuppes.readthedocs.io/en/latest"

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]

[tool.ruff]
lint.ignore = ["E501"]
lint.extend-select = ["I", "C4", "SIM"]
# "C4" : comprehensions
# "TCH" : type checking optimizations
# "SIM" : code simplifications
target-version = "py39"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
pythonpath = ["."]

# TESTING:
# [[tool.uv.index]]
# name = "testpypi"
# url = "https://test.pypi.org/simple/"
# publish-url = "https://test.pypi.org/legacy/"

[tool.setuptools]
license-files = [] # 2025-01-05: see uv issue #9513

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
